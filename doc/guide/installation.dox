/*! \file installation.dox
    \brief Installation of Verdandi.
*/

/*!
\page installation Installation

%Verdandi is supposed to be fully compliant with the <b>C++ standard</b>. This ensures portability on many platforms. It compiles at least on \ref linux, \ref macos and \ref windows. It is compatible with IDEs such as Xcode and Microsoft Visual Studio.

\section dependencies Dependencies
%Verdandi requires:
<ul>
  <li> the software construction tool <a href="http://www.scons.org/">SCons</a> (version 1.0 or higher) for compilation; </li>
  <li> Python for both SCons and the optional Python interface (see page \ref python) to the C++ code; the generation of the interface also requires <a href="http://www.swig.org/">SWIG</a>. </li>
</ul>

Note that in %Verdandi tarball, you will also find:
<ul>
  <li> the linear algebra library <a href="http://seldon.sourceforge.net/">Seldon</a>. </li>
</ul>

\section linux Linux

\subsection installation_linux Installation

Download the source code (<a href="http://verdandi.gforge.inria.fr/">Verdandi homepage</a>), usually available in a compressed file, e.g. Verdandi-[version].tar.bz2. Uncompress the file, e.g. in command line: <code>tar -xvjf Verdandi-[version].tar.bz2</code>. This will create the directory <code>Verdandi-[version]/</code> in which you will find %Verdandi.

\subsection tests_linux Testing the installation

In order to start with %Verdandi, it is sufficient to install SCons. Make sure that the executable <code>scons</code> is available.

To compile the examples provided with %Verdandi, run <code>scons</code> in the directory <code>example/shallow_water/</code>:

\precode
$ scons
\endprecode

Then to run the examples, execute the following commands:
\precode
$ write_matrix [1]
$ forward configuration/river-truth.cfg [2]
$ optimal_interpolation configuration/river.cfg [3]
\endprecode

\comment
        <li>This program writes a matrix in the file <code>configuration/matrix.dat</code>. This matrix is used to define the observation operator. In this example, it is the identity. </li>
        <li>This program generates the true observations by running the model with the true initial conditions described in <code>river-truth.cfg</code>, without any error. It performs steps forward with the shallow-water model without data assimilation.</li>
        <li>This program applies the optimal interpolation, starting from erroneous initial conditions described in <code>river.cfg</code>. The observations are those generated above by <code>forward</code>.</li>
\endcomment

\section macos MacOS

\section windows Windows

*/
